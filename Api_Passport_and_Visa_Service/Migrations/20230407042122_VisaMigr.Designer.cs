// <auto-generated />
using System;
using Api_Passport_and_Visa_Service.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api_Passport_and_Visa_Service.Migrations
{
    [DbContext(typeof(VisaDbContext))]
    [Migration("20230407042122_VisaMigr")]
    partial class VisaMigr
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.Client", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Citizenship")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("DepartureCountryid")
                        .HasColumnType("integer");

                    b.Property<int?>("InternationalPassportid")
                        .HasColumnType("integer");

                    b.Property<int?>("PaymentInvoiceid")
                        .HasColumnType("integer");

                    b.Property<int?>("RecordAppointmentid")
                        .HasColumnType("integer");

                    b.Property<int?>("RequestOnIntPassportid")
                        .HasColumnType("integer");

                    b.Property<int?>("RequestOnVisaid")
                        .HasColumnType("integer");

                    b.Property<int?>("Visaid")
                        .HasColumnType("integer");

                    b.Property<string>("familyStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("middleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nameClient")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nationaly")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("placeOfBirth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("DepartureCountryid");

                    b.HasIndex("InternationalPassportid");

                    b.HasIndex("PaymentInvoiceid");

                    b.HasIndex("RecordAppointmentid");

                    b.HasIndex("RequestOnIntPassportid");

                    b.HasIndex("RequestOnVisaid");

                    b.HasIndex("Visaid");

                    b.ToTable("client");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.DepartureCountry", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("dateDeparture")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.ToTable("departureCountry");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("RecordAppointmentid")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("birthday")
                        .HasColumnType("date");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("middleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nameEmp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("qualificationLevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("RecordAppointmentid");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.InternationalPassport", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("dateEnd")
                        .HasColumnType("date");

                    b.Property<DateOnly>("dateStart")
                        .HasColumnType("date");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("organization")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("series")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("internationalPassport");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.PassportData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Clientid")
                        .HasColumnType("integer");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("series")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Clientid");

                    b.ToTable("passportData");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.PaymentInvoice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("date_Payment")
                        .HasColumnType("date");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("paymentInvoice");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.Post_List", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Employeeid")
                        .HasColumnType("integer");

                    b.Property<bool>("managet")
                        .HasColumnType("boolean");

                    b.Property<string>("namePost")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Employeeid");

                    b.ToTable("postList");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.RecordAppointment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("dateAppointment")
                        .HasColumnType("date");

                    b.Property<string>("purposeOfAdmission")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("recordAppointment");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.Registration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Clientid")
                        .HasColumnType("integer");

                    b.Property<string>("Flat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("House")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("Clientid");

                    b.ToTable("registration");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.RequestOnIntPassport", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("dateReq")
                        .HasColumnType("date");

                    b.Property<int>("number")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("requestOnIntPassport");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.RequestOnVisa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("dateReq")
                        .HasColumnType("date");

                    b.Property<string>("departureGoals")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("number")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("returnDate")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.ToTable("requestOnVisa");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.Status", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("DepartureCountryid")
                        .HasColumnType("integer");

                    b.Property<string>("nameStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("reasonForRefusal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("DepartureCountryid");

                    b.ToTable("status");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.Visa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("dateEnd")
                        .HasColumnType("date");

                    b.Property<DateOnly>("dateOfIssue")
                        .HasColumnType("date");

                    b.Property<DateOnly>("dateStart")
                        .HasColumnType("date");

                    b.Property<int>("number")
                        .HasColumnType("integer");

                    b.Property<string>("placeOfIssue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("visa");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.Client", b =>
                {
                    b.HasOne("Api_Passport_and_Visa_Service.Model.DepartureCountry", null)
                        .WithMany("client")
                        .HasForeignKey("DepartureCountryid");

                    b.HasOne("Api_Passport_and_Visa_Service.Model.InternationalPassport", null)
                        .WithMany("client")
                        .HasForeignKey("InternationalPassportid");

                    b.HasOne("Api_Passport_and_Visa_Service.Model.PaymentInvoice", null)
                        .WithMany("client")
                        .HasForeignKey("PaymentInvoiceid");

                    b.HasOne("Api_Passport_and_Visa_Service.Model.RecordAppointment", null)
                        .WithMany("client")
                        .HasForeignKey("RecordAppointmentid");

                    b.HasOne("Api_Passport_and_Visa_Service.Model.RequestOnIntPassport", null)
                        .WithMany("client")
                        .HasForeignKey("RequestOnIntPassportid");

                    b.HasOne("Api_Passport_and_Visa_Service.Model.RequestOnVisa", null)
                        .WithMany("client")
                        .HasForeignKey("RequestOnVisaid");

                    b.HasOne("Api_Passport_and_Visa_Service.Model.Visa", null)
                        .WithMany("client")
                        .HasForeignKey("Visaid");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.Employee", b =>
                {
                    b.HasOne("Api_Passport_and_Visa_Service.Model.RecordAppointment", null)
                        .WithMany("employee")
                        .HasForeignKey("RecordAppointmentid");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.PassportData", b =>
                {
                    b.HasOne("Api_Passport_and_Visa_Service.Model.Client", null)
                        .WithMany("PassportDatas")
                        .HasForeignKey("Clientid");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.Post_List", b =>
                {
                    b.HasOne("Api_Passport_and_Visa_Service.Model.Employee", null)
                        .WithMany("employeePost")
                        .HasForeignKey("Employeeid");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.Registration", b =>
                {
                    b.HasOne("Api_Passport_and_Visa_Service.Model.Client", null)
                        .WithMany("Registrations")
                        .HasForeignKey("Clientid");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.Status", b =>
                {
                    b.HasOne("Api_Passport_and_Visa_Service.Model.DepartureCountry", null)
                        .WithMany("status")
                        .HasForeignKey("DepartureCountryid");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.Client", b =>
                {
                    b.Navigation("PassportDatas");

                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.DepartureCountry", b =>
                {
                    b.Navigation("client");

                    b.Navigation("status");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.Employee", b =>
                {
                    b.Navigation("employeePost");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.InternationalPassport", b =>
                {
                    b.Navigation("client");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.PaymentInvoice", b =>
                {
                    b.Navigation("client");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.RecordAppointment", b =>
                {
                    b.Navigation("client");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.RequestOnIntPassport", b =>
                {
                    b.Navigation("client");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.RequestOnVisa", b =>
                {
                    b.Navigation("client");
                });

            modelBuilder.Entity("Api_Passport_and_Visa_Service.Model.Visa", b =>
                {
                    b.Navigation("client");
                });
#pragma warning restore 612, 618
        }
    }
}
